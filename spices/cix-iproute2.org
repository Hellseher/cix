# File       : iproute2.md
# Created    : Wed 17 Feb 2016 02:44:12
# Modified   : <2017-8-18 Fri 00:01:00 BST> sharlatan
# Maintainer : sharlatan
# Sinopsis   : Advanced IP routing and network device configuration tools

#+OPTIONS: toc:nil num:nil

[[file:../cix-main.org][|≣|]]
#+TITLE: iproute2
|----------------+----------------------------------------------------|
| *Author*       | Alexey Kuznetsovd                                  |
| *Contributors* | Nikolay Aleksandrov, Daniel Borkmann, Roopa Prabhu |
|                | Gustavo Zacarias, Nicolas Dichtel, Paolo Abeni     |
|                | Stephen Hemminger, Zhang Sheng [[http://git.kernel.org/cgit/linux/kernel/git/shemminger/iproute2.git/stats/?period=q&ofs=-1][(all..)]]             |
| *Realised*     | 2007                                               |
| *Source*       | [[http://git.kernel.org/cgit/linux/kernel/git/shemminger/iproute2.git/][iproute2]]                                           |
|----------------+----------------------------------------------------|
The iproute package contains networking utilities (ip and rtmon, for example)
which are designed to use the advanced networking capabilities of the Linux
2.4.x and 2.6.x kernel.
-----
* Index
#+BEGIN_EXAMPLE
    ip (8)     - show / manipulate routing, devices, policy routing and tunnels
    ss (8)     - another utility to investigate sockets
    tc (8)     - show / manipulate traffic control settings
    arpd (8)   - userspace arp daemon.
    nstat (8)  - network statistics tools.
    bridge (8) - show / manipulate bridge addresses and devices
    rtacct (8) - network statistics tools.
    rtmon (8)  - listens to and monitors RTnetlink
    ctstat (8) - unified linux network statistics
    lnstat (8) - unified linux network statistics
    routef (8) - flush routes
    routel (8) - list routes with pretty output format
    rtstat (8) - unified linux network statistics
#+END_EXAMPLE

** [[file:cix-net-tools.org][net-tools]] vs iproute2

| Description         | net-tools                          | iproute2                       |
|---------------------+------------------------------------+--------------------------------|
| Bring ${IF} UP/DOWN | ifconfig ${IF} up/down             | ip link set ${IF} up/down      |
| Add ${IP} to ${IF}  | ifcofnig ${IF} ${IP} netmask ${NM} | ip addr add ${IP}/24 dev ${IF} |
|                     |                                    |                                |

#+NAME: var-names
#+BEGIN_EXAMPLE
${IF} - interface
${IP} - IPv4/IPv6 address
${NM} - netmask
#+END_EXAMPLE
-----

* Recipients
** ip                                                                           :cmd:
[[Index][⬆]]
*** ip::options
| Command | Valid abbreviations          |
|---------+------------------------------|
| address | a ad add addr addres address |

*** ip::examples

- ip-161108233852 :: Watch trafic statistics on interface *enp2s0*
#+BEGIN_SRC sh
    $: watch ip -s link show enp2s0
#+END_SRC
*** ip::files

*** ip::see-also
-----
** ss                                                                           :cmd:
[[Index][⬆]]
*** ss::options
| OPT               | TYPE | ++V | --V | DESC                                     |
|-------------------+------+-----+-----+------------------------------------------|
| =-p, --processes= |      |     |     | Show process using socket.               |
| =-n, --numeric=   |      |     |     | Do not try to resolve service names.     |
| =-a, --all=       |      |     |     | Display both listening and non-listening |
|-------------------+------+-----+-----+------------------------------------------|
*** ss::examples

**** ss-161116231307 
programms that request access to Internet
:    ~# ss -p | cat
:    ~# ss -p | grep STA
:    ~# ss -p | cut -f2 -sd\"or # Just process/command name
:    ~# ss -p | grep STA | cut -f2 -d\"
[[file:./cix-gnu-coreutils.org::*cat][cat]] [[file:./cix-gnu-coreutils.org::*cut][cut]] [[file:./cix-gnu-grep.org::*grep][grep]] 

**** ss-170817234939
list top 10 PIDs wich has most of all connections:
:    ~# ss -nap | grep -P "(?<=pid\=)[0-9]+" -o | sort | uniq -c | sort -rn | head
[[file:./cix-gnu-coreutils.org::*sort][sort]] [[file:./cix-gnu-coreutils.org::*uniq][uniq]] [[file:./cix-gnu-coreutils.org::*head][head]] [[file:./cix-gnu-grep.org::*grep][grep]]

*** ss::files
*** ss::see-also

** Referance
*** Links
- http://baturin.org/docs/iproute2/
- https://wiki.linuxfoundation.org/networking/iproute2
- http://lartc.org/lartc.html
- IPROUTE2 Utility Suite Howto http://www.policyrouting.org/iproute2-toc.html
