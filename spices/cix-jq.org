# File           : cix-jq.org
# Created        : <2017-08-04 Fri 23:19:38 BST>
# Modified       : <2017-11-16 Thu 21:00:44 GMT> Sharlatan
# Author         : sharlatan
# Maintainer(s)  :
# Sinopsis       : lightweight and flexible command-line JSON processor.

#+OPTIONS: num:nil

[[file:../cix-main.org][|≣|]]
#+TITLE: jq
|-----------------+---------------|
| *Author*        | Stephen Dolan |
| *Maintainer(s)* |               |
| *Released*      | 2012          |
| *Source*        | [[https://github.com/stedolan/jq][jq.git]]        |
| *Homepage*      | [[https://stedolan.github.io/jq/][jq.web]]        |
|-----------------+---------------|

lightweight and flexible command-line JSON processor

=jq= is like =sed= for JSON data – you can use it to slice and filter and map
and transform structured data with the same ease that =sed=, =awk=, =grep= and
friends let you play with text.

It is written in portable C, and it has zero runtime dependencies.

=jq= can mangle the data format that you have into the one that you want with
very little effort, and the program to do so is often shorter and simpler than
you'd expect.
-----
* Index
* Receipts
** jq
*** jq::options
| keys      |
| length    |
| type      |
| has(keys) |

*** jq::examples
**** jq-171021015458
list all Ansible variables from =setup= module:
:    ~$ ansible -m setup localhost |sed "1c {" | jq ".ansible_facts|keys"

* References

# End of cix-jq.org
