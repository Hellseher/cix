# File          : cix-sed.org
# Created       : <2016-11-04 Fri 22:49:14 GMT>
# Modified      : <2017-9-03 Sun 23:40:59 BST> sharlatan
# Author        : sharlatan
# Maintainer(s) :
# Sinopsis      : A GNU stream text editor

#+OPTIONS: num:nil

[[file:../cix-main.org][|â‰£|]]
#+TITLE: sed
|-----------------+-----------------|
| *Author(s)*     | Lee E. McMahon, |
|                 | Jay Fenlason,   |
|                 | Tom Lord        |
| *Maintainer(s)* | Ken Pizzini,    |
|                 | Paolo Bozini,   |
|                 | Jim Meyering,   |
|                 | Assaf Gordon    |
| *Released*      | 1974            |
|                 | gnu-1989        |
| *Source*        | [[http://git.savannah.gnu.org/gitweb/?p%3Dsed.git][sed.git]]         |
| *Info*          |                 |
|-----------------+-----------------|

The =sed= (Stream EDitor) editor is a stream or batch (non-interactive) editor.
Sed takes text as input, performs an operation or set of operations on the text
and outputs the modified text. The operations that sed performs (substitutions,
deletions, insertions, etc.) can be specified in a script file or from the
command line.
-----
* Receipts
** GNU sed                                                                      :cmd:

*** sed::options
| OPT                               | TYPE | ++V | --V | DESC                                                  |
|-----------------------------------+------+-----+-----+-------------------------------------------------------|
| =-i[SUFFIX], --in-place[=SUFFIX]= |      |     |     | edit files in place (makes backup if SUFFIX supplied) |
| =-e script, --expression=script=  |      |     |     | add the script to the commands to be execute          |
| =-r=                              |      |     |     |                                                       |
| =-n, --quite, --silent=           |      |     |     | suppress automatic printing of pattern space          |
|-----------------------------------+------+-----+-----+-------------------------------------------------------|

**** Regular expressions

| SIMBOL  | DESCRIPTIONS                               |
|---------+--------------------------------------------|
| =^=     | Begining of the line                       |
| =$=     | End of line                                |
| =.=     | Match any symbol                           |
| =[a-z]= | Any letter from a to z                     |
| =[0-9]= | Any number from 0 to 9                     |
| =*=     | One or more sympols                        |
| ={n}=   | Quantifier where n is any interg number    |
| =&=     | Matched string                             |
| =\n=    | Group number where n is any integer number |
|---------+--------------------------------------------|

*** sed::options
| OPT              | TYPE | ++V | --V | DESC |
| =-i, --in-place= | str  |     |     |      |

*** sed::examples
**** sed-161122223125
Remove leading white spaces and tabs from a file:
:    ~$ sed -i -e 's/^[ \t]*//g' input_f
:    ~$ sed 's/^ *//g' input_f > tmp_f && mv tmp_f input_f
[[file:./cix-gnu-core-utilities.org::*mv][mv (1)]]

**** sed-170304154248
Remove trailing white spaces from a file:
:    ~$ sed -i -e 's/[\t ]*$//g' input_f
:    ~$ sed -e 's/ *$//g' input_f > tmp_f && mv tm_f input_f
[[file:./cix-gnu-core-utilities.org::*mv][mv (1)]]

**** sed-170718230254
Remove blank lines from a file:
:    ~$ sed -i -e '/^$/' input_f

**** sed-170718231048
Remove leading, trailing whitespaces, tabs and blank lines in one run:
:    ~$ sed -i -e 's/^[\t ]*//;s/[\t ]*$//;s/^$/' input_f

**** sed-170718231657
To remove everything except the 1st n characters in every line:
:    ~$ sed -r 's/(.{3}).*/\1/' input_f

**** sed-170718231934
To remove everything except the last n characters in a file:
:    ~$ sed -r 's/.*(.{3})/\1/' input_f

**** sed-161122224710
Remove lines between 2 patterns exluding and including:
:    ~$ sed "/BEGIN_PAT/,/END_PAT/{//!d}" input_f > tmp_f && mv tmp_f input_f
:    ~$ sed "/BEGIN_PAT/,/END_PAT/d" input_f > tmp_f && mv tmp_f input_f
[[file:./cix-gnu-core-utilities.org::*mv][mv (1)]]

**** sed-170106224318
Output text betwin BEGIN_PAT and END_PAT:
:    ~$ sed -n '/BEGIN_PAT/,/END_PAT/p' input_f

**** sed-170106225346
Wrap each line of a file in quotes:
:    ~$ sed -e 's/\(.*\)/"\1"/' input_f

**** sed-170203214632
Split camelcase with spaces:
:    ~$ sed 's/\([A-Z]\)/ \1/g'

**** sed-170718233452
Insert line after or before PATTERN:
:    ~$ sed -i '/PATTERN/a NEW_LINE_STRING' input_f
:    ~$ sed 's/\(PATERN\)/NEW_LINE_STRING\1/g' input_f

**** sed-161209234700
Insert spaces every n character in a file or string:
#+BEGIN_SRC sh
  #!/usr/bin/env bash

  N=10
  # Alter the header value to get longer string
  TEST_DATA="$(head -100 /dev/random | base64 | tr -d '\n')"

  echo "$TEST_DATA" | sed 's/.\{'$N'\}/& /g'

#+END_SRC
[[file:./cix-gnu-core-utilities.org::*head][head (1)]] [[file:./cix-gnu-core-utilities.org::*base64][base64 (1)]]

**** sed-170806230716
only return the matched string:
:    ~$ sed -n 's/.*\(PATERN\).*/\1/p' input_f
:    ~$ sed 's/.*\(PATERN\).*/\1/' input_f

**** sed-170903233956 
display the last line of the file:
:    ~$ sed -n '$p' input_f
:    ~$ sed '$!d' input_f

*** sed::files
*** sed::see-also
    [[file:./cix-gawk.org::*awk][awk (1)]], ed, [[file:./cix-gnu-grep.org::*grep][grep (1)]], [[file:./cix-gnu-core-utilities.org::*tr][tr (1)]],perlre(1)
* References
** Links
- Sed - An Introduction and Tutorial by Bruce Barnett
  http://www.grymoire.com/Unix/Sed.html
- Sed One-Liners Explained
  http://www.catonmat.net/blog/sed-one-liners-explained-part-one/
- sed.sf.net
  http://sed.sourceforge.net/
- Useful one-line scripts for sed 
  http://www.pement.org/sed/sed1line.txt
