# File           : cix-sed.org
# Created        : <2016-11-04 Fri 22:49:14 GMT>
# Modified  : <2017-3-04 Sat 15:46:15 GMT> sharlatan
# Author         : sharlatan
# Maintainer(s   :
# Short          :

#+OPTIONS: num:nil

[[../README.org::*Index][|â‰£|]]
#+TITLE: SED
|--------+----------------|
| *Author* | Lee E. McMahon |
|        |                |
|--------+----------------|
The sed  (Stream EDitor) editor is  a stream or batch  (non-interactive) editor.
Sed takes text as input, performs an  operation or set of operations on the text
and outputs the modified text.  The operations that sed performs (substitutions,
deletions,  insertions, etc.)  can be  specified in  a script  file or  from the
command line.
-----

* Receipts
** GNU sed                                                                      :cmd:
*** sed::options
|---------------------------------+-------------------------------------------------------|
| =-i[SUFFIX], --in-place[=SUFFIX]= | edit files in place (makes backup if SUFFIX supplied) |
| =-e script, --expression=script=  | add the script to the commands to be execute          |
| =-n, --quite, --silent=           | suppress automatic printing of pattern space          |
|---------------------------------+-------------------------------------------------------|
*** sed::examples
**** sed-161122223125
remove leading white spaces from a file:
:    ~$ sed -i -e 's/^ *//g' input_f
:    ~$ sed 's/^ *//' input_f > tmp_f && mv tmp_f input_f
[[file:./cix-gnu-core-utilities.org::*mv][mv (1)]]
**** sed-170304154248
remove trailing white spaces from a file:
:    ~$ sed -i -e 's/ *$//g' input_f
:    ~$ sed -e 's/ *$//g' input_f > tmp_f && mv tm_f input_f
[[file:./cix-gnu-core-utilities.org::*mv][mv (1)]]

**** sed-161122224710
remove lines between 2 patterns exluding and including:
:    ~$ sed "/BEGIN_PAT/,/END_PAT/{//!d}" input_f > tmp_f && mv tmp_f input_f
:    ~$ sed "/BEGIN_PAT/,/END_PAT/d" input_f > tmp_f && mv tmp_f input_f
[[file:./cix-gnu-core-utilities.org::*mv][mv (1)]]

**** sed-170106224318
output text betwin BEGIN_PAT and END_PAT:
:    ~$ sed -n '/BEGIN_PAT/,/END_PAT/p' input_f

**** sed-170106225346
wrap each line of a file in quotes:
:    ~$ sed -e 's/\(.*\)/"\1"/' input_f

**** sed-170203214632
split camelcase with spaces:
:    ~$ sed 's/\([A-Z]\)/ \1/g'

**** sed-161209234700
insert spaces every n character in a file or string:
#+BEGIN_SRC sh
  #!/usr/bin/env bash

  N=10
  # Alter the header value to get longer string
  TEST_DATA="$(head -100 /dev/random | base64 | tr -d '\n')"

  echo "$TEST_DATA" | sed 's/.\{'$N'\}/& /g'

#+END_SRC
[[file:./cix-gnu-core-utilities.org::*head][head (1)]] [[file:./cix-gnu-core-utilities.org::*base64][base64 (1)]]

*** sed::files
*** sed::see-also
    [[file:./cix-gawk.org::*awk][awk (1)]], ed, [[file:./cix-gnu-grep.org::*grep][grep (1)]], [[file:./cix-gnu-core-utilities.org::*tr][tr (1)]],perlre(1)
* References
** Links
- Sed - An Introduction and Tutorial by Bruce Barnett
  http://www.grymoire.com/Unix/Sed.html
- Sed One-Liners Explained
  http://www.catonmat.net/blog/sed-one-liners-explained-part-one/
