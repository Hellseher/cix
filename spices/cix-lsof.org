# File           : cix-lsof.org
# Created        : <2016-11-05 Sat 23:22:08 GMT>
# Modified  : <2017-7-21 Fri 00:32:45 BST> sharlatan
# Author         : sharlatan
# Maintainer(s   :
# Short          :

#+OPTIONS: num:nil

[[../README.org::*Index][|â‰£|]]
#+TITLE: lsof

|--------------+-----------|
| *Author*       | Vic Abell |
| *Contributors* |           |
| *Realised*     | 1994      |
| *Source*       | [[ftp://lsof.itap.purdue.edu/pub/tools/unix/lsof/][ftp:lsof]]  |
| *Info*         | [[ftp://lsof.itap.purdue.edu/pub/tools/unix/lsof/FAQ][FAQ]]       |
|--------------+-----------|

Lists information about files that are open by the processes running on a UNIX
system.
-----
* Receipts
** lsof                                                                         :cmd:
*** lsof::options
- COMMAND ::
- PID ::
- TID ::
- USER ::
- FD :: FileDiscriptor
  + *[0-9]+[rwu-]*
    - r for read access;
    - w for write access;
    - u for read and write access;
    - space if mode unknown and no lock character follows;
    - '-' if mode unknown and lock character follows.
  + colord
  + cwd - CurentWorkingDirectory;
  + dbus
   + DEL -
  + gdm
  + mem - MEmoryMapped file;
  + mem-r
  + mmap - MemoryMapped device;
  + NOFD
  + pd - ParentDirectory;
  + polkitd
  + rtd - RooTDirectory;
  + rtkit
  + txt - TeXT;
  + USER
- TYPE ::
  + VDIR
  + VREG
- DEVICE ::
- SIZE/OFF ::
- NODE NAME ::
*** lsof::examples
**** lsof-161105232800
If there are a lot of files you are trying to search in, *lsof* helps to watch a
directory which *find* working on:
:    ~# lsof -Fn -a -c find -d cwd +r 10

**** lsof-161106001559
List of open port/connections, main option *-i*:
:    ~ # lsoff -i -P -n       # All open connections
:    ~ # lsoff -i -a -p 1234  # All connections with PID=1234
:    ~ # lsoff -i tcp:80      # Process licenning port 80

**** lsof-170719225835
To exlude a file and check sertain files:
:    ~# lsof -e /run/user/1000/gvfs -f -- /tmp/report.csv

**** lsof-161112003215
Find out who is using file system when failed to unmount it:
#+BEGIN_SRC sh
  MNT_PATH="/path/to/mounting/point"

  if ! umount "$MNT_PATH" 2>/dev/null; then
      echo "Failed to unmount, check this first"
      lsof "$MNT_PATH"
  else
      echo "Done"
  fi
#+END_SRC

*** lsof::files
#+BEGIN_EXAMPLE
    /dev/kmem         kernel virtual memory device
    /dev/mem          physical memory device
    /dev/swap         system paging device
    .lsof_hostname    lsof's device cache file
#+END_EXAMPLE

*** lsof::see-also
    access(2) awk(1) crash(1) fattach(3C) ff(1) fstat(8) fuser(1) gethostname(2)
    isprint(3) kill(1) localtime(3) lstat(2) modload(8) mount(8) netstat(1)
    ofiles(8L) perl(1) ps(1) readlink(2) setlocale(3) stat(2) strftime(3)
    time(2) uname(1)

* References
** Links
- Vic Abell's Home Page https://people.freebsd.org/~abe/
- Finding open files with lsof http://www.ibm.com/developerworks/aix/library/au-lsof.html
