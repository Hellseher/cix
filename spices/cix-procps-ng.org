# File          : cix-procps-ng.org
# Created       : <2015-11-02 Tue 01:14:54 GMT>
# Modified      : <2020-4-23 Thu 09:36:52 BST>
# Author        : #Rλatan
# Sinopsis      : System and process monitoring utilities.

#+OPTIONS: num:nil

[[file:../cix-main.org][|≣|]]
#+TITLE: procps-ng

|----------------+--------------------|
| *Author*       | Roger Binn         |
| *Contributors* | Branko Lankester,  |
|                | Michael K. Johnson |
| *Released*     | 1991               |
| *Source*       | [[https://gitlab.com/procps-ng/procps][procps-ng.git]]      |
|----------------+--------------------|

Command line and full screen utilities for browsing procfs, a "pseudo" file
system dynamically generated by the kernel to provide information about the
status of entries in its process table.
-----

* Index
#+BEGIN_SRC sh  :results output org replace :exports results
../cix-stat.sh mandoc procps-ng
#+END_SRC

#+RESULTS:
#+begin_src org
| CMD     | MAN  | DESCRIPTION                                               |
| free    | (3)  | allocate and free dynamic memory                          |
| free    | (1)  | Display amount of free and used memory in the system      |
| free    | (3p) | free allocated memory                                     |
| pgrep   | (1)  | look up or signal processes based on name and other at... |
| pidof   | (1)  | find the process ID of a running program.                 |
| pkill   | (1)  | look up or signal processes based on name and other at... |
| pmap    | (1)  | report memory map of a process                            |
| ps      | (1)  | report a snapshot of the current processes.               |
| ps      | (1p) | report process status                                     |
| pwdx    | (1)  | report current working directory of a process             |
| skill   | (1)  | send a signal or report process status                    |
| slabtop | (1)  | display kernel slab cache information in real time        |
| snice   | (1)  | send a signal or report process status                    |
| tload   | (1)  | graphic representation of system load average             |
| top     | (1)  | display Linux processes                                   |
| uptime  | (1)  | Tell how long the system has been running.                |
| vmstat  | (8)  | Report virtual memory statistics                          |
| w       | (1)  | Show who is logged on and what they are doing.            |
| watch   | (1)  | execute a program periodically, showing output fullscreen |
| pidof   | (1)  | find the process ID of a running program.                 |
| sysctl  | (2)  | read/write system parameters                              |
| sysctl  | (8)  | configure kernel parameters at runtime                    |
#+end_src

* Receipts
** free                                                                         
[[Index][⬆]]
*** free::options
*** free::exapmles
*** free::files
*** free::see-also
** kill                                                                         
[[Index][⬆]]
*** kill::options
*** kill::exapmles
*** kill::files
*** kill::see-also
** pgrep                                                                        
[[Index][⬆]]
*** pgrep::options
*** pgrep::exapmles
*** pgrep::files
*** pgrep::see-also
** pkill                                                                        
[[Index][⬆]]
*** pkill::options
| OPTIONS                               | TYPE | V++ | V-- | DESCRIPTION                                                    |
|---------------------------------------+------+-----+-----+----------------------------------------------------------------|
| =--ns <PID>=                          |      |     |     | match the processes that belong to the same namespace as <pid> |
| =--nslist <ipc,mnt,net,pid,user,uts>= |      |     |     | list which namespaces will be considered for the --ns option.  |
| =-<sig>, --signal <sig>=              |      |     |     | signal to send (either number or name)                         |
| =-F, --pidfile <file>=                |      |     |     | read PIDs from file                                            |
| =-G, --group <GID,...>=               |      |     |     | match real group IDs                                           |
| =-L, --logpidfile=                    |      |     |     | fail if PID file is not locked                                 |
| =-P, --parent <PPID,...>=             |      |     |     | match only child processes of the given parent                 |
| =-U, --uid <ID,...>=                  |      |     |     | match by real IDs                                              |
| =-V, --version=                       |      |     |     | output version information and exit                            |
| =-c, --count=                         |      |     |     | count of matching processes                                    |
| =-e, --echo=                          |      |     |     | display what is killed                                         |
| =-f, --full=                          |      |     |     | use full process name to match                                 |
| =-g, --pgroup <PGID,...>=             |      |     |     | match listed process group IDs                                 |
| =-h, --help=                          |      |     |     | display this help and exit                                     |
| =-n, --newest=                        |      |     |     | select most recently started                                   |
| =-o, --oldest=                        |      |     |     | select least recently started                                  |
| =-s, --session <SID,...>=             |      |     |     | match session IDs                                              |
| =-t, --terminal <tty,...>=            |      |     |     | match by controlling terminal                                  |
| =-u, --euid <ID,...>=                 |      |     |     | match by effective IDs                                         |
| =-x, --exact=                         |      |     |     | match exactly with the command name                            |
|---------------------------------------+------+-----+-----+----------------------------------------------------------------|
*** pkill::exapmles
**** pkill-171220225525
kill all process of the USER and remove it from the system:
:    ~# pkill -u USER && userdel -f USER
[[file::*userdel][userdel]]

*** pkill::files
*** pkill::see-also
** pmap                                                                         
[[Index][⬆]]
*** pmap::options
*** pmap::exapmles
*** pmap::files
*** pmap::see-also
** ps                                                                           
 [[Index][⬆]] /process status/
*** ps::options
*** ps::exapmles
**** ps-180930203726
list top 10 most memory hungry processes:
:    ~$ ps axo rss,pid | sort -k1rn | head

**** ps-200423091940
list top 10 most CPU hungry processes:
:    ~$ ps aux | sort -nrk 3,3 | head
:    ~$ ps axo %cpu,user,pid,command | sort -r | head

**** ps-200423092739
list sorted list of users with number of running processes:
:    ~$ ps axo user | sort | uniq -c | sort -rn

*** ps::files
*** ps::see-also
    kill(1), pgrep(1), pkill(1), procstat(1), w(1), kvm(3), libxo(3), strftime(3),
    xo_parse_args(3), mac(4), procfs(5), pstat(8), sysctl(8), mutex(9)
** pwdx                                                                         
[[Index][⬆]]
*** pwdx::options
*** pwdx::exapmles
*** pwdx::files
*** pwdx::see-also
** skill                                                                        
[[Index][⬆]]
*** skill::options
*** skill::exapmles
*** skill::files
*** skill::see-also
** snice                                                                        
[[Index][⬆]]
*** snice::options
*** snice::exapmles
*** snice::files
*** snice::see-also
** sysctl                                                                       
[[Index][⬆]]
*** sysctl::options
*** sysctl::exapmles
*** sysctl::files
*** sysctl::see-also
** tload                                                                        
[[Index][⬆]]
*** tload::options
*** tload::exapmles
*** tload::files
*** tload::see-also
** top                                                                          
[[Index][⬆]]
*** top::options
*** top::exapmles
**** top-180726224216
filter processes listed based on processname:
:    ~$ top -c -p $(pgrep -d',' -f matched_string_of_cmdline)
*** top::files
*** top::see-also
** uptime                                                                       
[[Index][⬆]]
*** uptime::options
*** uptime::exapmles
*** uptime::files
*** uptime::see-also
** vmstat                                                                       
[[Index][⬆]]
*** vmstat::options
*** vmstat::exapmles
*** vmstat::files
*** vmstat::see-also

** w                                                                            
[[Index][⬆]]
*** w::options
*** w::exapmles
*** w::files
*** w::see-also
** watch                                                                        
[[Index][⬆]]
*** watch::options
*** watch::exapmles
*** watch::files
*** watch::see-also
* References

# End of cix-procps-ng.org
