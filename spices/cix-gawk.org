# File       : cix-awk.org
# Created    : <2016-11-04 Fri 22:15:18 GMT>
# Modified   : <2017-8-22 Tue 23:09:54 BST> sharlatan
# Author     : sharlatan
# Maintainer :
# Sinopsis   : The GNU version of the AWK text processing utility

#+OPTIONS: num:nil

[[file:../cix-main.org][|≣|]]
#+TITLE: gawk
|--------------+--------------------|
| *Author*     | Paul Rubin,        |
|              | Paul Finlason,     |
|              | Richard Stallman   |
| *Maintainer* | Arnold D. Robbins, |
|              | David Trueman      |
| *Released*   | 1994               |
| *Source*     | [[http://git.savannah.gnu.org/cgit/gawk.git][gawk.git]]           |
| *Man*        | [[http://man7.org/linux/man-pages/man1/gawk.1.html][gawk.1]]             |
| *Info*       |                    |
|--------------+--------------------|
The gawk package contains the GNU version of AWK text processing utility. AWK is
a programming language designed for text processing and typically used as a data
extraction and reporting tool.

The gawk utility can be used to do quick and easy text pattern matching,
extracting or reformatting. It is considered to be a standard Linux tool for
text processing.
-----
* Index
#+BEGIN_EXAMPLE
    awk (1)   - pattern scanning and pr    ocessing language
    awk (1p)  - pattern scanning and processing language
    gawk (1)  - pattern scanning and processing language
    igawk (1) - gawk with include files
#+END_EXAMPLE

* Receipts
** awk                                                                          :cmd:
*** awk::options
| OPT | TYPE | ++V | --V | DESC |
|-----+------+-----+-----+------|
|     |      |     |     |      |
|-----+------+-----+-----+------|
*** awk::examples
**** awk-161111213155
sort text by the length of lines:
:    ~$ awk '{print length, $0;}' inptut_f | sort -n | grep -oP "(?<=\s).+"
[[./cix-gnu-core-utilities.org::*sort][sort (1)]] [[./cix-gnu-grep.org::*grep][grep (1)]]

**** awk-161120234902
swap 2 columns in a text file with SPS delimiter:
:    ~$ awk '{tmp=$1; $1=$2; $2=tmp; print;}' ../tests/spices_files.md5

**** awk-161122203549
search text betwin two lines:
:    ~$ awk '/line_begin/{f=1} /line_end/{f=0;print} f' ./file_name
:    ~$ awk '/line_begin/{f=1} f; /line_end/{f=0}' ./file_name
:    ~$ awk '/line_begin/,/line_end/' ./file_name

**** awk-161225233030
print unique line of a file:
:    ~$ awk '!a[$0]++' file

**** awk-161120183934
word frequencies count in a file:
#+BEGIN_SRC sh
  #!/usr/bin/env bash

  FILE_PATH="../tests/test_big.txt"
  awk '{ for (i = 1; i <= NF; i++) {print tolower($i);}}' "$FILE_PATH" \
      | sort \
      | uniq -c \
      | sort -rm
#+END_SRC
[[./cix-gnu-core-utilities.org::*sort][sort (1)]] [[./cix-gnu-core-utilities.org::*uniq][uniq (1)]]


**** awk-170118210126
measure total bytes writen since system boot, Linux:
#+BEGIN_SRC sh
  #!/usr/bin/env bash

  KERNEL_RELEASE="$(uname -r | sed 's/\.//g')"

  if [ "${KERNEL_RELEASE:0:2}" -gt "26" ]; then
      echo "Total Bytes Writen (TBW)"
      awk '/sd/ {print $3"\t"$10 / 2 / 1024, "MB"}' /proc/diskstats
  else
      echo "Not supported in kernel v2.6 or lower."
  fi
#+END_SRC
[[file:./cix-gnu-core-utilities.org::*uname][uname (1)]], [[file:./cix-sed.org::*sed][sed (1)]], [[file:./cix-gnu-core-utilities.org::*echo][echo (1)]]

**** awk-170822224800
print all lines of a input_f:
:    ~$ awk "{print}" input_f 
:    ~$ awk "{print 0}" input_f 
:    ~$ cat input_f | awk "{print}"

**** awk-170822225001 
number of lines in a file:
:    ~$ awk 'END {print NR}' input_f

**** awk-170822225128 
number of fields (columns) in each row of input_f:
:    ~$ awk '{print NF]' input_f

**** awk-170822225351  
list all lines longer than 50 characters:
:    ~$ awk 'length($0) > 50 {print}' input_f

**** awk-170822230017 
calculate total size of files in directory including sub directories in Mb:
:    ~$ find ./ -type f -print0 | xargs -0 ls -l | awk '{total += $5} END {print "subtotal: "total/1024/1024"Mb"}'
[[file:./cix-gnu-findutils.org::*find][find]] [[file:./cix-gnu-findutils.org::*xargs][xargs]] [[file:./cix-gnu-coreutils.org::*ls][ls]]

*** awk::files
*** awk::see-also
    egrep(1), sed(1), getpid(2), getppid(2), getpgrp(2), getuid(2), geteuid(2),
    getgid(2), getegid(2), getgroups(2), usleep(3)
* References
** Boooks
- Alfred V. Aho, Brian W. Kernighan, Peter J. Weinberger;
  *The AWK Programming Language*;
  Addison-Wesley, 1988.  ISBN 0-201-07981-X;
- *GAWK: Effective AWK Programming, Edition 4.1*;
** Links
- TCP/IP Internetworking With gawk
  https://www.gnu.org/software/gawk/manual/gawkinet/gawkinet.html
- The GNU Awk User’s Guide
  https://www.gnu.org/software/gawk/manual/gawk.html
